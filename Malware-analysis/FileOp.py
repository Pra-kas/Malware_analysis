import os
import time
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
import FileAnalysis


class DownloadHandler(FileSystemEventHandler):
    def is_valid_file(self, file_path):
        excluded_pattern = ".org.chromium.Chromium."
        return not file_path.startswith('.') and not file_path.endswith('.crdownload') and  excluded_pattern not in file_path

    def on_created(self, event):
        if event.is_directory:
            return

        file_path = event.src_path
        if self.is_valid_file(file_path):
            print(f"Downloaded file: {file_path}")
            print("\nI got it")
            FileAnalysis.main(file_path)

    def monitor_downloads(self):
        user_home = "/home"
        monitored_directories = ["Documents", "Videos", "Pictures", "Music", "Downloads"]

        observer = Observer()

        for home_directory_name in os.listdir(user_home):
            home_directory = os.path.join(user_home, home_directory_name)

            if os.path.isdir(home_directory) and not home_directory_name.startswith('.'):
                for directory_name in monitored_directories:
                    directory_path = os.path.join(home_directory, directory_name)
                    if os.path.isdir(directory_path) and not directory_name.startswith('.'):
                        observer.schedule(self, directory_path, recursive=True)

        observer.start()

        try:
            while True:
                time.sleep(1)
        except KeyboardInterrupt:
            observer.stop()
        observer.join()

if __name__ == "__main__":
    handler = DownloadHandler()
    handler.monitor_downloads()
